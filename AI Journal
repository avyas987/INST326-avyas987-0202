Week 1: 9/14/2025

This week, I only used AI (ChatGPT and Gemini) to help me clearly understand booleans, floats, f-strings, slicing, '.find()' command and many other Python concepts. Not only did I use AI to teach me content but also to boost my confidence in knowing that I am doing this assignment correctly. Since I did not use AI to solve any of the answers on the assignment, I felt a lot better about myself because I was seriously learning new material that I am interested in - even if it meant spending more time on the work. I also hope to be able to work with my team on our coding projects without having to rely on AI for assistance, except when I am trying to learn new material.

Week 2: 9/21/2025

This week, I was mainly using AI (Claude and ChatGPT) to debug my programs that I created for the week 2's exercise assignment. I didn't have too many bugs overall, but noticed that sometimes I would have a simple syntax error or my code is missing a crucial part. I realized that no matter how small a coding error is (syntax error, logic error, or compilation error), they still prevent my code from running - which also would lose me some points on the assignment.

Week 3: 9/28/2025

This week, I used AI (ChatGPT) to help me break down Python functions such as '.strip()', '.upper()', and elif statements. I only asked to be taught the fundamentals of those functions - with some coding examples - so that when I worked on the week 3 exercises, I would be able to understand how to do code the problems. I was also very nervous and confused when I ran into my first infinite loop because my VS Code was lagging and getting stuck constantly, and my whole laptop also became slow. However, it was a good lesson for me to learn.

Week 4: 10/5/2025

This week, I used AI to teach me how to properly utilize the '_init_' method. I was shocked by how simple it was to initialize class objects, as soon as I figured out how to use '_init_'. I realized that assigning attributes is very similar to designing a house's interior, or packing your lunch, or planning your day -- because of how Python classes require attributes (values) to make it function, and it needs every single attribute to become fully operational.

Week 5: 10/12/2025

This week, I asked AI (ChatGPT) to help me me understand what exactly is encapsulation, how to create proper getters and setters that create attributes for classes, and how to tie everything into coding problems. With the help of ChatGPT, I understood that getters and setters are one of the key parts of encapsulation (binding all the methods and attributes into a singular class). Another thing I comprehended is that by creating more and more classes (which have attributes and methods within them), I am bascially creating objects (hence the class name, "Object-Oriented Programming") that can be reused within different domains.

Week 6: 10/26/2025

This week, I utilized AI by helping me further understand class methods and static methods, and how to properly apply them into my coding projects. Since Python is a new coding language that I am learning, I have never needed to use the '@' keyword (for '@classmethod' and '@staticmethod'). As a result, I had to ask ChatGPT and Gemini what the purpose was for including the the '@' symbol in the code. But, I am grateful to do so because now I have expanded my knowledge on not just Python but on every coding language.
